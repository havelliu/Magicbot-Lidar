First, make sure you have ROS installed on your Beaglebone, robot laptop, and your remote laptop. 
Follow the instructions online on installing ROS Kinetic Kame, and make sure everything is 
updated.

Next, access your Beaglebone and create a catkin workspace. Then, run the terminal command 
"catkin_make" to automatically configure the workspace. Next, within the src folder, create a 
folder called "magicbot_ros". This will house all of your code to actually run the robot. Now
that you have a folder for the code, create a git repository within the folder and set the 
origin as:

	https://github.com/havelliu/Magicbot---UMich.git

Pull from this repository to get all of the source code as well as the necessary package.xml and 
CMake files. (Instructions to download the robotics cape library) Once you have downloaded
everything, go back to the catkin workspace directory you created and run the terminal command 
"catkin_make" to compile the workspace. Finally, we need to make sure we're running the robotics
cape commands as the root user, so type in the following terminal commands:

	sudo chown root:root ~/(YOUR_CATKIN_WORKSPACE_NAME)/devel/lib/magicbot_ros/magicbot_ros
	sudo chmod u+s ~/(YOUR_CATKIN_WORKSPACE_NAME)/devel/lib/magicbot_ros/magicbot_ros

Your Beaglebone should be ready. Next, we can move on the the robot laptop. First, create a
catkin workspace and run "catkin_make" to configure the workspace. Next, go into the src folder
and create a folder called "magicbot_2dnav." Initialize a git repository in this folder and set
the origin to:

	https://github.com/havelliu/Magicbot-Lidar.git

Pull from this repository to get the launch files for the lidar sensor. Next, download the
necessary ROS packages using the following terminal commands:

	sudo apt-get install ros-kinetic-velodyne
	sudo apt-get install ros-kinetic-pointcloud-to-laserscan
	sudo apt-get install ros-kinetic-turtlebot3

You will notice a folder in your magicbot_2dnav directory called robot_launch_files. Since we 
are using a different robot with the turtlebot3 code, we have to modify multiple launch files to
get the library to work. This folder should contain all the launch files you need to replace.

The launch files for the turtlebot3 library can be found by typing the following terminal
commands:

	cd //
	cd opt/ros/kinetic/share/turtlebot3_bringup/launch

You will see multiple launch files within this folder. We are only concerned with two files:

	turtlebot3_core.launch
	turtlebot3_robot.launch

You will notice that your magicbot_2dnav/robot_launch_files folder contains modified versions of 
these two files. Use root privileges to replace the two vanilla launch files with these. Your 
robot laptop should be ready.

Finally, we need to configure your remote laptop to get the magicbot up and running. Download the
turtlebot3 library using:

	sudo apt-get install ros-kinetic-turtlebot3

Then, create a folder anywhere you like called "magicbot_remote" and initialize a git repository
within it. Set the origin to:

	https://github.com/havelliu/Magicbot-Remote.git

Your folder now contains the modified launch files for the turtlebot3 library as well as a robot
description file within the urdf folder and configuration files for the move_base package within
the config folder. On our remote computer, we are concerned with the following turtlebot3
packages:

	turtlebot3_bringup
	turtlebot3_slam
	turtlebot3_navigation
	turtlebot3_description

Using root privileges, replace the file "turtlebot3_remote.launch" within
turtlebot3_bringup/launch with the one within your magicbot_remote folder. Next, replace the
files "turtlebot3_slam.launch" and "turtlebot3_gmapping.launch" in turtlebot3_navigation/launch
with the ones in magicbot_remote. Finally, replace the files "amcl.launch," "move_base.launch,"
and "turtlebot3_navigation.launch" in turtlebot3_navigation/launch with the ones in your 
magicbot_remote folder. You will also need to delete all the files within
turtlebot3_navigation/param and copy in the files from magicbot_remote/config. You will also
need to copy in the file "magicbot.urdf" from magicbot_remote/urdf into
turtlebot3_description/urdf. 

You should now be finished setting up your magicbot to run using the turtlebot3 library!
Follow the instructions from here:

	http://emanual.robotis.com/docs/en/platform/turtlebot3/overview/

These instructions will teach you how to get your magicbot running and mapping. Don't worry,
the files have been modified such that following the instructions here will work for the 
magicbot.
